/*
 * Nomad
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.1.4
 * Contact: support@hashicorp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.nomadproject.client.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.nomadproject.client.models.Job;
import io.nomadproject.client.models.JobDiff;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import io.nomadproject.client.JSON;

/**
 * JobVersionsResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class JobVersionsResponse {
  public static final String SERIALIZED_NAME_DIFFS = "Diffs";
  @SerializedName(SERIALIZED_NAME_DIFFS)
  private List<JobDiff> diffs = null;

  public static final String SERIALIZED_NAME_KNOWN_LEADER = "KnownLeader";
  @SerializedName(SERIALIZED_NAME_KNOWN_LEADER)
  private Boolean knownLeader;

  public static final String SERIALIZED_NAME_LAST_CONTACT = "LastContact";
  @SerializedName(SERIALIZED_NAME_LAST_CONTACT)
  private Long lastContact;

  public static final String SERIALIZED_NAME_LAST_INDEX = "LastIndex";
  @SerializedName(SERIALIZED_NAME_LAST_INDEX)
  private Integer lastIndex;

  public static final String SERIALIZED_NAME_NEXT_TOKEN = "NextToken";
  @SerializedName(SERIALIZED_NAME_NEXT_TOKEN)
  private String nextToken;

  public static final String SERIALIZED_NAME_REQUEST_TIME = "RequestTime";
  @SerializedName(SERIALIZED_NAME_REQUEST_TIME)
  private Long requestTime;

  public static final String SERIALIZED_NAME_VERSIONS = "Versions";
  @SerializedName(SERIALIZED_NAME_VERSIONS)
  private List<Job> versions = null;

  public JobVersionsResponse() { 
  }

  public JobVersionsResponse diffs(List<JobDiff> diffs) {
    
    this.diffs = diffs;
    return this;
  }

  public JobVersionsResponse addDiffsItem(JobDiff diffsItem) {
    if (this.diffs == null) {
      this.diffs = new ArrayList<>();
    }
    this.diffs.add(diffsItem);
    return this;
  }

   /**
   * Get diffs
   * @return diffs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<JobDiff> getDiffs() {
    return diffs;
  }


  public void setDiffs(List<JobDiff> diffs) {
    this.diffs = diffs;
  }


  public JobVersionsResponse knownLeader(Boolean knownLeader) {
    
    this.knownLeader = knownLeader;
    return this;
  }

   /**
   * Get knownLeader
   * @return knownLeader
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getKnownLeader() {
    return knownLeader;
  }


  public void setKnownLeader(Boolean knownLeader) {
    this.knownLeader = knownLeader;
  }


  public JobVersionsResponse lastContact(Long lastContact) {
    
    this.lastContact = lastContact;
    return this;
  }

   /**
   * Get lastContact
   * @return lastContact
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getLastContact() {
    return lastContact;
  }


  public void setLastContact(Long lastContact) {
    this.lastContact = lastContact;
  }


  public JobVersionsResponse lastIndex(Integer lastIndex) {
    
    this.lastIndex = lastIndex;
    return this;
  }

   /**
   * Get lastIndex
   * minimum: 0
   * maximum: 384
   * @return lastIndex
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getLastIndex() {
    return lastIndex;
  }


  public void setLastIndex(Integer lastIndex) {
    this.lastIndex = lastIndex;
  }


  public JobVersionsResponse nextToken(String nextToken) {
    
    this.nextToken = nextToken;
    return this;
  }

   /**
   * Get nextToken
   * @return nextToken
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNextToken() {
    return nextToken;
  }


  public void setNextToken(String nextToken) {
    this.nextToken = nextToken;
  }


  public JobVersionsResponse requestTime(Long requestTime) {
    
    this.requestTime = requestTime;
    return this;
  }

   /**
   * Get requestTime
   * @return requestTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getRequestTime() {
    return requestTime;
  }


  public void setRequestTime(Long requestTime) {
    this.requestTime = requestTime;
  }


  public JobVersionsResponse versions(List<Job> versions) {
    
    this.versions = versions;
    return this;
  }

  public JobVersionsResponse addVersionsItem(Job versionsItem) {
    if (this.versions == null) {
      this.versions = new ArrayList<>();
    }
    this.versions.add(versionsItem);
    return this;
  }

   /**
   * Get versions
   * @return versions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Job> getVersions() {
    return versions;
  }


  public void setVersions(List<Job> versions) {
    this.versions = versions;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JobVersionsResponse jobVersionsResponse = (JobVersionsResponse) o;
    return Objects.equals(this.diffs, jobVersionsResponse.diffs) &&
        Objects.equals(this.knownLeader, jobVersionsResponse.knownLeader) &&
        Objects.equals(this.lastContact, jobVersionsResponse.lastContact) &&
        Objects.equals(this.lastIndex, jobVersionsResponse.lastIndex) &&
        Objects.equals(this.nextToken, jobVersionsResponse.nextToken) &&
        Objects.equals(this.requestTime, jobVersionsResponse.requestTime) &&
        Objects.equals(this.versions, jobVersionsResponse.versions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(diffs, knownLeader, lastContact, lastIndex, nextToken, requestTime, versions);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JobVersionsResponse {\n");
    sb.append("    diffs: ").append(toIndentedString(diffs)).append("\n");
    sb.append("    knownLeader: ").append(toIndentedString(knownLeader)).append("\n");
    sb.append("    lastContact: ").append(toIndentedString(lastContact)).append("\n");
    sb.append("    lastIndex: ").append(toIndentedString(lastIndex)).append("\n");
    sb.append("    nextToken: ").append(toIndentedString(nextToken)).append("\n");
    sb.append("    requestTime: ").append(toIndentedString(requestTime)).append("\n");
    sb.append("    versions: ").append(toIndentedString(versions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Diffs");
    openapiFields.add("KnownLeader");
    openapiFields.add("LastContact");
    openapiFields.add("LastIndex");
    openapiFields.add("NextToken");
    openapiFields.add("RequestTime");
    openapiFields.add("Versions");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to JobVersionsResponse
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (JobVersionsResponse.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in JobVersionsResponse is not found in the empty JSON string", JobVersionsResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!JobVersionsResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `JobVersionsResponse` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      JsonArray jsonArraydiffs = jsonObj.getAsJsonArray("Diffs");
      if (jsonArraydiffs != null) {
        // ensure the json data is an array
        if (!jsonObj.get("Diffs").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `Diffs` to be an array in the JSON string but got `%s`", jsonObj.get("Diffs").toString()));
        }

        // validate the optional field `Diffs` (array)
        for (int i = 0; i < jsonArraydiffs.size(); i++) {
          JobDiff.validateJsonObject(jsonArraydiffs.get(i).getAsJsonObject());
        };
      }
      if (jsonObj.get("NextToken") != null && !jsonObj.get("NextToken").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `NextToken` to be a primitive type in the JSON string but got `%s`", jsonObj.get("NextToken").toString()));
      }
      JsonArray jsonArrayversions = jsonObj.getAsJsonArray("Versions");
      if (jsonArrayversions != null) {
        // ensure the json data is an array
        if (!jsonObj.get("Versions").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `Versions` to be an array in the JSON string but got `%s`", jsonObj.get("Versions").toString()));
        }

        // validate the optional field `Versions` (array)
        for (int i = 0; i < jsonArrayversions.size(); i++) {
          Job.validateJsonObject(jsonArrayversions.get(i).getAsJsonObject());
        };
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!JobVersionsResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'JobVersionsResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<JobVersionsResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(JobVersionsResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<JobVersionsResponse>() {
           @Override
           public void write(JsonWriter out, JobVersionsResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public JobVersionsResponse read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of JobVersionsResponse given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of JobVersionsResponse
  * @throws IOException if the JSON string is invalid with respect to JobVersionsResponse
  */
  public static JobVersionsResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, JobVersionsResponse.class);
  }

 /**
  * Convert an instance of JobVersionsResponse to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

