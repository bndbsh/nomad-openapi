/*
 * Nomad
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.1.4
 * Contact: support@hashicorp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.nomadproject.client.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.nomadproject.client.models.PreemptionConfig;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import io.nomadproject.client.JSON;

/**
 * SchedulerConfiguration
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class SchedulerConfiguration {
  public static final String SERIALIZED_NAME_CREATE_INDEX = "CreateIndex";
  @SerializedName(SERIALIZED_NAME_CREATE_INDEX)
  private Integer createIndex;

  public static final String SERIALIZED_NAME_MEMORY_OVERSUBSCRIPTION_ENABLED = "MemoryOversubscriptionEnabled";
  @SerializedName(SERIALIZED_NAME_MEMORY_OVERSUBSCRIPTION_ENABLED)
  private Boolean memoryOversubscriptionEnabled;

  public static final String SERIALIZED_NAME_MODIFY_INDEX = "ModifyIndex";
  @SerializedName(SERIALIZED_NAME_MODIFY_INDEX)
  private Integer modifyIndex;

  public static final String SERIALIZED_NAME_PREEMPTION_CONFIG = "PreemptionConfig";
  @SerializedName(SERIALIZED_NAME_PREEMPTION_CONFIG)
  private PreemptionConfig preemptionConfig;

  public static final String SERIALIZED_NAME_REJECT_JOB_REGISTRATION = "RejectJobRegistration";
  @SerializedName(SERIALIZED_NAME_REJECT_JOB_REGISTRATION)
  private Boolean rejectJobRegistration;

  public static final String SERIALIZED_NAME_SCHEDULER_ALGORITHM = "SchedulerAlgorithm";
  @SerializedName(SERIALIZED_NAME_SCHEDULER_ALGORITHM)
  private String schedulerAlgorithm;

  public SchedulerConfiguration() { 
  }

  public SchedulerConfiguration createIndex(Integer createIndex) {
    
    this.createIndex = createIndex;
    return this;
  }

   /**
   * Get createIndex
   * minimum: 0
   * maximum: 384
   * @return createIndex
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getCreateIndex() {
    return createIndex;
  }


  public void setCreateIndex(Integer createIndex) {
    this.createIndex = createIndex;
  }


  public SchedulerConfiguration memoryOversubscriptionEnabled(Boolean memoryOversubscriptionEnabled) {
    
    this.memoryOversubscriptionEnabled = memoryOversubscriptionEnabled;
    return this;
  }

   /**
   * Get memoryOversubscriptionEnabled
   * @return memoryOversubscriptionEnabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getMemoryOversubscriptionEnabled() {
    return memoryOversubscriptionEnabled;
  }


  public void setMemoryOversubscriptionEnabled(Boolean memoryOversubscriptionEnabled) {
    this.memoryOversubscriptionEnabled = memoryOversubscriptionEnabled;
  }


  public SchedulerConfiguration modifyIndex(Integer modifyIndex) {
    
    this.modifyIndex = modifyIndex;
    return this;
  }

   /**
   * Get modifyIndex
   * minimum: 0
   * maximum: 384
   * @return modifyIndex
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getModifyIndex() {
    return modifyIndex;
  }


  public void setModifyIndex(Integer modifyIndex) {
    this.modifyIndex = modifyIndex;
  }


  public SchedulerConfiguration preemptionConfig(PreemptionConfig preemptionConfig) {
    
    this.preemptionConfig = preemptionConfig;
    return this;
  }

   /**
   * Get preemptionConfig
   * @return preemptionConfig
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PreemptionConfig getPreemptionConfig() {
    return preemptionConfig;
  }


  public void setPreemptionConfig(PreemptionConfig preemptionConfig) {
    this.preemptionConfig = preemptionConfig;
  }


  public SchedulerConfiguration rejectJobRegistration(Boolean rejectJobRegistration) {
    
    this.rejectJobRegistration = rejectJobRegistration;
    return this;
  }

   /**
   * Get rejectJobRegistration
   * @return rejectJobRegistration
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getRejectJobRegistration() {
    return rejectJobRegistration;
  }


  public void setRejectJobRegistration(Boolean rejectJobRegistration) {
    this.rejectJobRegistration = rejectJobRegistration;
  }


  public SchedulerConfiguration schedulerAlgorithm(String schedulerAlgorithm) {
    
    this.schedulerAlgorithm = schedulerAlgorithm;
    return this;
  }

   /**
   * Get schedulerAlgorithm
   * @return schedulerAlgorithm
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSchedulerAlgorithm() {
    return schedulerAlgorithm;
  }


  public void setSchedulerAlgorithm(String schedulerAlgorithm) {
    this.schedulerAlgorithm = schedulerAlgorithm;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SchedulerConfiguration schedulerConfiguration = (SchedulerConfiguration) o;
    return Objects.equals(this.createIndex, schedulerConfiguration.createIndex) &&
        Objects.equals(this.memoryOversubscriptionEnabled, schedulerConfiguration.memoryOversubscriptionEnabled) &&
        Objects.equals(this.modifyIndex, schedulerConfiguration.modifyIndex) &&
        Objects.equals(this.preemptionConfig, schedulerConfiguration.preemptionConfig) &&
        Objects.equals(this.rejectJobRegistration, schedulerConfiguration.rejectJobRegistration) &&
        Objects.equals(this.schedulerAlgorithm, schedulerConfiguration.schedulerAlgorithm);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(createIndex, memoryOversubscriptionEnabled, modifyIndex, preemptionConfig, rejectJobRegistration, schedulerAlgorithm);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SchedulerConfiguration {\n");
    sb.append("    createIndex: ").append(toIndentedString(createIndex)).append("\n");
    sb.append("    memoryOversubscriptionEnabled: ").append(toIndentedString(memoryOversubscriptionEnabled)).append("\n");
    sb.append("    modifyIndex: ").append(toIndentedString(modifyIndex)).append("\n");
    sb.append("    preemptionConfig: ").append(toIndentedString(preemptionConfig)).append("\n");
    sb.append("    rejectJobRegistration: ").append(toIndentedString(rejectJobRegistration)).append("\n");
    sb.append("    schedulerAlgorithm: ").append(toIndentedString(schedulerAlgorithm)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("CreateIndex");
    openapiFields.add("MemoryOversubscriptionEnabled");
    openapiFields.add("ModifyIndex");
    openapiFields.add("PreemptionConfig");
    openapiFields.add("RejectJobRegistration");
    openapiFields.add("SchedulerAlgorithm");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to SchedulerConfiguration
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (SchedulerConfiguration.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in SchedulerConfiguration is not found in the empty JSON string", SchedulerConfiguration.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!SchedulerConfiguration.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SchedulerConfiguration` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      // validate the optional field `PreemptionConfig`
      if (jsonObj.getAsJsonObject("PreemptionConfig") != null) {
        PreemptionConfig.validateJsonObject(jsonObj.getAsJsonObject("PreemptionConfig"));
      }
      if (jsonObj.get("SchedulerAlgorithm") != null && !jsonObj.get("SchedulerAlgorithm").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `SchedulerAlgorithm` to be a primitive type in the JSON string but got `%s`", jsonObj.get("SchedulerAlgorithm").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SchedulerConfiguration.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SchedulerConfiguration' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SchedulerConfiguration> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SchedulerConfiguration.class));

       return (TypeAdapter<T>) new TypeAdapter<SchedulerConfiguration>() {
           @Override
           public void write(JsonWriter out, SchedulerConfiguration value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SchedulerConfiguration read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of SchedulerConfiguration given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of SchedulerConfiguration
  * @throws IOException if the JSON string is invalid with respect to SchedulerConfiguration
  */
  public static SchedulerConfiguration fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SchedulerConfiguration.class);
  }

 /**
  * Convert an instance of SchedulerConfiguration to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

