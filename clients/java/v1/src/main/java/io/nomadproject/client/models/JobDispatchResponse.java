/*
 * Nomad
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.1.4
 * Contact: support@hashicorp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.nomadproject.client.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import io.nomadproject.client.JSON;

/**
 * JobDispatchResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class JobDispatchResponse {
  public static final String SERIALIZED_NAME_DISPATCHED_JOB_I_D = "DispatchedJobID";
  @SerializedName(SERIALIZED_NAME_DISPATCHED_JOB_I_D)
  private String dispatchedJobID;

  public static final String SERIALIZED_NAME_EVAL_CREATE_INDEX = "EvalCreateIndex";
  @SerializedName(SERIALIZED_NAME_EVAL_CREATE_INDEX)
  private Integer evalCreateIndex;

  public static final String SERIALIZED_NAME_EVAL_I_D = "EvalID";
  @SerializedName(SERIALIZED_NAME_EVAL_I_D)
  private String evalID;

  public static final String SERIALIZED_NAME_JOB_CREATE_INDEX = "JobCreateIndex";
  @SerializedName(SERIALIZED_NAME_JOB_CREATE_INDEX)
  private Integer jobCreateIndex;

  public static final String SERIALIZED_NAME_LAST_INDEX = "LastIndex";
  @SerializedName(SERIALIZED_NAME_LAST_INDEX)
  private Integer lastIndex;

  public static final String SERIALIZED_NAME_REQUEST_TIME = "RequestTime";
  @SerializedName(SERIALIZED_NAME_REQUEST_TIME)
  private Long requestTime;

  public JobDispatchResponse() { 
  }

  public JobDispatchResponse dispatchedJobID(String dispatchedJobID) {
    
    this.dispatchedJobID = dispatchedJobID;
    return this;
  }

   /**
   * Get dispatchedJobID
   * @return dispatchedJobID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDispatchedJobID() {
    return dispatchedJobID;
  }


  public void setDispatchedJobID(String dispatchedJobID) {
    this.dispatchedJobID = dispatchedJobID;
  }


  public JobDispatchResponse evalCreateIndex(Integer evalCreateIndex) {
    
    this.evalCreateIndex = evalCreateIndex;
    return this;
  }

   /**
   * Get evalCreateIndex
   * minimum: 0
   * maximum: 384
   * @return evalCreateIndex
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getEvalCreateIndex() {
    return evalCreateIndex;
  }


  public void setEvalCreateIndex(Integer evalCreateIndex) {
    this.evalCreateIndex = evalCreateIndex;
  }


  public JobDispatchResponse evalID(String evalID) {
    
    this.evalID = evalID;
    return this;
  }

   /**
   * Get evalID
   * @return evalID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEvalID() {
    return evalID;
  }


  public void setEvalID(String evalID) {
    this.evalID = evalID;
  }


  public JobDispatchResponse jobCreateIndex(Integer jobCreateIndex) {
    
    this.jobCreateIndex = jobCreateIndex;
    return this;
  }

   /**
   * Get jobCreateIndex
   * minimum: 0
   * maximum: 384
   * @return jobCreateIndex
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getJobCreateIndex() {
    return jobCreateIndex;
  }


  public void setJobCreateIndex(Integer jobCreateIndex) {
    this.jobCreateIndex = jobCreateIndex;
  }


  public JobDispatchResponse lastIndex(Integer lastIndex) {
    
    this.lastIndex = lastIndex;
    return this;
  }

   /**
   * Get lastIndex
   * minimum: 0
   * maximum: 384
   * @return lastIndex
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getLastIndex() {
    return lastIndex;
  }


  public void setLastIndex(Integer lastIndex) {
    this.lastIndex = lastIndex;
  }


  public JobDispatchResponse requestTime(Long requestTime) {
    
    this.requestTime = requestTime;
    return this;
  }

   /**
   * Get requestTime
   * @return requestTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getRequestTime() {
    return requestTime;
  }


  public void setRequestTime(Long requestTime) {
    this.requestTime = requestTime;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JobDispatchResponse jobDispatchResponse = (JobDispatchResponse) o;
    return Objects.equals(this.dispatchedJobID, jobDispatchResponse.dispatchedJobID) &&
        Objects.equals(this.evalCreateIndex, jobDispatchResponse.evalCreateIndex) &&
        Objects.equals(this.evalID, jobDispatchResponse.evalID) &&
        Objects.equals(this.jobCreateIndex, jobDispatchResponse.jobCreateIndex) &&
        Objects.equals(this.lastIndex, jobDispatchResponse.lastIndex) &&
        Objects.equals(this.requestTime, jobDispatchResponse.requestTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dispatchedJobID, evalCreateIndex, evalID, jobCreateIndex, lastIndex, requestTime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JobDispatchResponse {\n");
    sb.append("    dispatchedJobID: ").append(toIndentedString(dispatchedJobID)).append("\n");
    sb.append("    evalCreateIndex: ").append(toIndentedString(evalCreateIndex)).append("\n");
    sb.append("    evalID: ").append(toIndentedString(evalID)).append("\n");
    sb.append("    jobCreateIndex: ").append(toIndentedString(jobCreateIndex)).append("\n");
    sb.append("    lastIndex: ").append(toIndentedString(lastIndex)).append("\n");
    sb.append("    requestTime: ").append(toIndentedString(requestTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("DispatchedJobID");
    openapiFields.add("EvalCreateIndex");
    openapiFields.add("EvalID");
    openapiFields.add("JobCreateIndex");
    openapiFields.add("LastIndex");
    openapiFields.add("RequestTime");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to JobDispatchResponse
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (JobDispatchResponse.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in JobDispatchResponse is not found in the empty JSON string", JobDispatchResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!JobDispatchResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `JobDispatchResponse` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if (jsonObj.get("DispatchedJobID") != null && !jsonObj.get("DispatchedJobID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `DispatchedJobID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("DispatchedJobID").toString()));
      }
      if (jsonObj.get("EvalID") != null && !jsonObj.get("EvalID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `EvalID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("EvalID").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!JobDispatchResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'JobDispatchResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<JobDispatchResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(JobDispatchResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<JobDispatchResponse>() {
           @Override
           public void write(JsonWriter out, JobDispatchResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public JobDispatchResponse read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of JobDispatchResponse given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of JobDispatchResponse
  * @throws IOException if the JSON string is invalid with respect to JobDispatchResponse
  */
  public static JobDispatchResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, JobDispatchResponse.class);
  }

 /**
  * Convert an instance of JobDispatchResponse to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

