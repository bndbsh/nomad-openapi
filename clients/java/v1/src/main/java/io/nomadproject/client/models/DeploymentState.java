/*
 * Nomad
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.1.4
 * Contact: support@hashicorp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.nomadproject.client.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import io.nomadproject.client.JSON;

/**
 * DeploymentState
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class DeploymentState {
  public static final String SERIALIZED_NAME_AUTO_REVERT = "AutoRevert";
  @SerializedName(SERIALIZED_NAME_AUTO_REVERT)
  private Boolean autoRevert;

  public static final String SERIALIZED_NAME_DESIRED_CANARIES = "DesiredCanaries";
  @SerializedName(SERIALIZED_NAME_DESIRED_CANARIES)
  private Integer desiredCanaries;

  public static final String SERIALIZED_NAME_DESIRED_TOTAL = "DesiredTotal";
  @SerializedName(SERIALIZED_NAME_DESIRED_TOTAL)
  private Integer desiredTotal;

  public static final String SERIALIZED_NAME_HEALTHY_ALLOCS = "HealthyAllocs";
  @SerializedName(SERIALIZED_NAME_HEALTHY_ALLOCS)
  private Integer healthyAllocs;

  public static final String SERIALIZED_NAME_PLACED_ALLOCS = "PlacedAllocs";
  @SerializedName(SERIALIZED_NAME_PLACED_ALLOCS)
  private Integer placedAllocs;

  public static final String SERIALIZED_NAME_PLACED_CANARIES = "PlacedCanaries";
  @SerializedName(SERIALIZED_NAME_PLACED_CANARIES)
  private List<String> placedCanaries = null;

  public static final String SERIALIZED_NAME_PROGRESS_DEADLINE = "ProgressDeadline";
  @SerializedName(SERIALIZED_NAME_PROGRESS_DEADLINE)
  private Long progressDeadline;

  public static final String SERIALIZED_NAME_PROMOTED = "Promoted";
  @SerializedName(SERIALIZED_NAME_PROMOTED)
  private Boolean promoted;

  public static final String SERIALIZED_NAME_REQUIRE_PROGRESS_BY = "RequireProgressBy";
  @SerializedName(SERIALIZED_NAME_REQUIRE_PROGRESS_BY)
  private OffsetDateTime requireProgressBy;

  public static final String SERIALIZED_NAME_UNHEALTHY_ALLOCS = "UnhealthyAllocs";
  @SerializedName(SERIALIZED_NAME_UNHEALTHY_ALLOCS)
  private Integer unhealthyAllocs;

  public DeploymentState() { 
  }

  public DeploymentState autoRevert(Boolean autoRevert) {
    
    this.autoRevert = autoRevert;
    return this;
  }

   /**
   * Get autoRevert
   * @return autoRevert
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getAutoRevert() {
    return autoRevert;
  }


  public void setAutoRevert(Boolean autoRevert) {
    this.autoRevert = autoRevert;
  }


  public DeploymentState desiredCanaries(Integer desiredCanaries) {
    
    this.desiredCanaries = desiredCanaries;
    return this;
  }

   /**
   * Get desiredCanaries
   * @return desiredCanaries
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getDesiredCanaries() {
    return desiredCanaries;
  }


  public void setDesiredCanaries(Integer desiredCanaries) {
    this.desiredCanaries = desiredCanaries;
  }


  public DeploymentState desiredTotal(Integer desiredTotal) {
    
    this.desiredTotal = desiredTotal;
    return this;
  }

   /**
   * Get desiredTotal
   * @return desiredTotal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getDesiredTotal() {
    return desiredTotal;
  }


  public void setDesiredTotal(Integer desiredTotal) {
    this.desiredTotal = desiredTotal;
  }


  public DeploymentState healthyAllocs(Integer healthyAllocs) {
    
    this.healthyAllocs = healthyAllocs;
    return this;
  }

   /**
   * Get healthyAllocs
   * @return healthyAllocs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getHealthyAllocs() {
    return healthyAllocs;
  }


  public void setHealthyAllocs(Integer healthyAllocs) {
    this.healthyAllocs = healthyAllocs;
  }


  public DeploymentState placedAllocs(Integer placedAllocs) {
    
    this.placedAllocs = placedAllocs;
    return this;
  }

   /**
   * Get placedAllocs
   * @return placedAllocs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getPlacedAllocs() {
    return placedAllocs;
  }


  public void setPlacedAllocs(Integer placedAllocs) {
    this.placedAllocs = placedAllocs;
  }


  public DeploymentState placedCanaries(List<String> placedCanaries) {
    
    this.placedCanaries = placedCanaries;
    return this;
  }

  public DeploymentState addPlacedCanariesItem(String placedCanariesItem) {
    if (this.placedCanaries == null) {
      this.placedCanaries = new ArrayList<>();
    }
    this.placedCanaries.add(placedCanariesItem);
    return this;
  }

   /**
   * Get placedCanaries
   * @return placedCanaries
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getPlacedCanaries() {
    return placedCanaries;
  }


  public void setPlacedCanaries(List<String> placedCanaries) {
    this.placedCanaries = placedCanaries;
  }


  public DeploymentState progressDeadline(Long progressDeadline) {
    
    this.progressDeadline = progressDeadline;
    return this;
  }

   /**
   * Get progressDeadline
   * @return progressDeadline
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getProgressDeadline() {
    return progressDeadline;
  }


  public void setProgressDeadline(Long progressDeadline) {
    this.progressDeadline = progressDeadline;
  }


  public DeploymentState promoted(Boolean promoted) {
    
    this.promoted = promoted;
    return this;
  }

   /**
   * Get promoted
   * @return promoted
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getPromoted() {
    return promoted;
  }


  public void setPromoted(Boolean promoted) {
    this.promoted = promoted;
  }


  public DeploymentState requireProgressBy(OffsetDateTime requireProgressBy) {
    
    this.requireProgressBy = requireProgressBy;
    return this;
  }

   /**
   * Get requireProgressBy
   * @return requireProgressBy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getRequireProgressBy() {
    return requireProgressBy;
  }


  public void setRequireProgressBy(OffsetDateTime requireProgressBy) {
    this.requireProgressBy = requireProgressBy;
  }


  public DeploymentState unhealthyAllocs(Integer unhealthyAllocs) {
    
    this.unhealthyAllocs = unhealthyAllocs;
    return this;
  }

   /**
   * Get unhealthyAllocs
   * @return unhealthyAllocs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getUnhealthyAllocs() {
    return unhealthyAllocs;
  }


  public void setUnhealthyAllocs(Integer unhealthyAllocs) {
    this.unhealthyAllocs = unhealthyAllocs;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DeploymentState deploymentState = (DeploymentState) o;
    return Objects.equals(this.autoRevert, deploymentState.autoRevert) &&
        Objects.equals(this.desiredCanaries, deploymentState.desiredCanaries) &&
        Objects.equals(this.desiredTotal, deploymentState.desiredTotal) &&
        Objects.equals(this.healthyAllocs, deploymentState.healthyAllocs) &&
        Objects.equals(this.placedAllocs, deploymentState.placedAllocs) &&
        Objects.equals(this.placedCanaries, deploymentState.placedCanaries) &&
        Objects.equals(this.progressDeadline, deploymentState.progressDeadline) &&
        Objects.equals(this.promoted, deploymentState.promoted) &&
        Objects.equals(this.requireProgressBy, deploymentState.requireProgressBy) &&
        Objects.equals(this.unhealthyAllocs, deploymentState.unhealthyAllocs);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(autoRevert, desiredCanaries, desiredTotal, healthyAllocs, placedAllocs, placedCanaries, progressDeadline, promoted, requireProgressBy, unhealthyAllocs);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DeploymentState {\n");
    sb.append("    autoRevert: ").append(toIndentedString(autoRevert)).append("\n");
    sb.append("    desiredCanaries: ").append(toIndentedString(desiredCanaries)).append("\n");
    sb.append("    desiredTotal: ").append(toIndentedString(desiredTotal)).append("\n");
    sb.append("    healthyAllocs: ").append(toIndentedString(healthyAllocs)).append("\n");
    sb.append("    placedAllocs: ").append(toIndentedString(placedAllocs)).append("\n");
    sb.append("    placedCanaries: ").append(toIndentedString(placedCanaries)).append("\n");
    sb.append("    progressDeadline: ").append(toIndentedString(progressDeadline)).append("\n");
    sb.append("    promoted: ").append(toIndentedString(promoted)).append("\n");
    sb.append("    requireProgressBy: ").append(toIndentedString(requireProgressBy)).append("\n");
    sb.append("    unhealthyAllocs: ").append(toIndentedString(unhealthyAllocs)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("AutoRevert");
    openapiFields.add("DesiredCanaries");
    openapiFields.add("DesiredTotal");
    openapiFields.add("HealthyAllocs");
    openapiFields.add("PlacedAllocs");
    openapiFields.add("PlacedCanaries");
    openapiFields.add("ProgressDeadline");
    openapiFields.add("Promoted");
    openapiFields.add("RequireProgressBy");
    openapiFields.add("UnhealthyAllocs");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to DeploymentState
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (DeploymentState.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in DeploymentState is not found in the empty JSON string", DeploymentState.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!DeploymentState.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DeploymentState` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      // ensure the json data is an array
      if (jsonObj.get("PlacedCanaries") != null && !jsonObj.get("PlacedCanaries").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `PlacedCanaries` to be an array in the JSON string but got `%s`", jsonObj.get("PlacedCanaries").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DeploymentState.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DeploymentState' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DeploymentState> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DeploymentState.class));

       return (TypeAdapter<T>) new TypeAdapter<DeploymentState>() {
           @Override
           public void write(JsonWriter out, DeploymentState value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DeploymentState read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of DeploymentState given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of DeploymentState
  * @throws IOException if the JSON string is invalid with respect to DeploymentState
  */
  public static DeploymentState fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DeploymentState.class);
  }

 /**
  * Convert an instance of DeploymentState to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

