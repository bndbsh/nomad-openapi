/*
 * Nomad
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.1.4
 * Contact: support@hashicorp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.nomadproject.client.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import io.nomadproject.client.JSON;

/**
 * FuzzySearchRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class FuzzySearchRequest {
  public static final String SERIALIZED_NAME_ALLOW_STALE = "AllowStale";
  @SerializedName(SERIALIZED_NAME_ALLOW_STALE)
  private Boolean allowStale;

  public static final String SERIALIZED_NAME_AUTH_TOKEN = "AuthToken";
  @SerializedName(SERIALIZED_NAME_AUTH_TOKEN)
  private String authToken;

  public static final String SERIALIZED_NAME_CONTEXT = "Context";
  @SerializedName(SERIALIZED_NAME_CONTEXT)
  private String context;

  public static final String SERIALIZED_NAME_FILTER = "Filter";
  @SerializedName(SERIALIZED_NAME_FILTER)
  private String filter;

  public static final String SERIALIZED_NAME_HEADERS = "Headers";
  @SerializedName(SERIALIZED_NAME_HEADERS)
  private Map<String, String> headers = null;

  public static final String SERIALIZED_NAME_NAMESPACE = "Namespace";
  @SerializedName(SERIALIZED_NAME_NAMESPACE)
  private String namespace;

  public static final String SERIALIZED_NAME_NEXT_TOKEN = "NextToken";
  @SerializedName(SERIALIZED_NAME_NEXT_TOKEN)
  private String nextToken;

  public static final String SERIALIZED_NAME_PARAMS = "Params";
  @SerializedName(SERIALIZED_NAME_PARAMS)
  private Map<String, String> params = null;

  public static final String SERIALIZED_NAME_PER_PAGE = "PerPage";
  @SerializedName(SERIALIZED_NAME_PER_PAGE)
  private Integer perPage;

  public static final String SERIALIZED_NAME_PREFIX = "Prefix";
  @SerializedName(SERIALIZED_NAME_PREFIX)
  private String prefix;

  public static final String SERIALIZED_NAME_REGION = "Region";
  @SerializedName(SERIALIZED_NAME_REGION)
  private String region;

  public static final String SERIALIZED_NAME_REVERSE = "Reverse";
  @SerializedName(SERIALIZED_NAME_REVERSE)
  private Boolean reverse;

  public static final String SERIALIZED_NAME_TEXT = "Text";
  @SerializedName(SERIALIZED_NAME_TEXT)
  private String text;

  public static final String SERIALIZED_NAME_WAIT_INDEX = "WaitIndex";
  @SerializedName(SERIALIZED_NAME_WAIT_INDEX)
  private Integer waitIndex;

  public static final String SERIALIZED_NAME_WAIT_TIME = "WaitTime";
  @SerializedName(SERIALIZED_NAME_WAIT_TIME)
  private Long waitTime;

  public FuzzySearchRequest() { 
  }

  public FuzzySearchRequest allowStale(Boolean allowStale) {
    
    this.allowStale = allowStale;
    return this;
  }

   /**
   * Get allowStale
   * @return allowStale
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getAllowStale() {
    return allowStale;
  }


  public void setAllowStale(Boolean allowStale) {
    this.allowStale = allowStale;
  }


  public FuzzySearchRequest authToken(String authToken) {
    
    this.authToken = authToken;
    return this;
  }

   /**
   * Get authToken
   * @return authToken
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAuthToken() {
    return authToken;
  }


  public void setAuthToken(String authToken) {
    this.authToken = authToken;
  }


  public FuzzySearchRequest context(String context) {
    
    this.context = context;
    return this;
  }

   /**
   * Get context
   * @return context
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getContext() {
    return context;
  }


  public void setContext(String context) {
    this.context = context;
  }


  public FuzzySearchRequest filter(String filter) {
    
    this.filter = filter;
    return this;
  }

   /**
   * Get filter
   * @return filter
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFilter() {
    return filter;
  }


  public void setFilter(String filter) {
    this.filter = filter;
  }


  public FuzzySearchRequest headers(Map<String, String> headers) {
    
    this.headers = headers;
    return this;
  }

  public FuzzySearchRequest putHeadersItem(String key, String headersItem) {
    if (this.headers == null) {
      this.headers = new HashMap<>();
    }
    this.headers.put(key, headersItem);
    return this;
  }

   /**
   * Get headers
   * @return headers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, String> getHeaders() {
    return headers;
  }


  public void setHeaders(Map<String, String> headers) {
    this.headers = headers;
  }


  public FuzzySearchRequest namespace(String namespace) {
    
    this.namespace = namespace;
    return this;
  }

   /**
   * Get namespace
   * @return namespace
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNamespace() {
    return namespace;
  }


  public void setNamespace(String namespace) {
    this.namespace = namespace;
  }


  public FuzzySearchRequest nextToken(String nextToken) {
    
    this.nextToken = nextToken;
    return this;
  }

   /**
   * Get nextToken
   * @return nextToken
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNextToken() {
    return nextToken;
  }


  public void setNextToken(String nextToken) {
    this.nextToken = nextToken;
  }


  public FuzzySearchRequest params(Map<String, String> params) {
    
    this.params = params;
    return this;
  }

  public FuzzySearchRequest putParamsItem(String key, String paramsItem) {
    if (this.params == null) {
      this.params = new HashMap<>();
    }
    this.params.put(key, paramsItem);
    return this;
  }

   /**
   * Get params
   * @return params
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, String> getParams() {
    return params;
  }


  public void setParams(Map<String, String> params) {
    this.params = params;
  }


  public FuzzySearchRequest perPage(Integer perPage) {
    
    this.perPage = perPage;
    return this;
  }

   /**
   * Get perPage
   * @return perPage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getPerPage() {
    return perPage;
  }


  public void setPerPage(Integer perPage) {
    this.perPage = perPage;
  }


  public FuzzySearchRequest prefix(String prefix) {
    
    this.prefix = prefix;
    return this;
  }

   /**
   * Get prefix
   * @return prefix
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPrefix() {
    return prefix;
  }


  public void setPrefix(String prefix) {
    this.prefix = prefix;
  }


  public FuzzySearchRequest region(String region) {
    
    this.region = region;
    return this;
  }

   /**
   * Get region
   * @return region
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getRegion() {
    return region;
  }


  public void setRegion(String region) {
    this.region = region;
  }


  public FuzzySearchRequest reverse(Boolean reverse) {
    
    this.reverse = reverse;
    return this;
  }

   /**
   * Get reverse
   * @return reverse
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getReverse() {
    return reverse;
  }


  public void setReverse(Boolean reverse) {
    this.reverse = reverse;
  }


  public FuzzySearchRequest text(String text) {
    
    this.text = text;
    return this;
  }

   /**
   * Get text
   * @return text
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getText() {
    return text;
  }


  public void setText(String text) {
    this.text = text;
  }


  public FuzzySearchRequest waitIndex(Integer waitIndex) {
    
    this.waitIndex = waitIndex;
    return this;
  }

   /**
   * Get waitIndex
   * minimum: 0
   * maximum: 384
   * @return waitIndex
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getWaitIndex() {
    return waitIndex;
  }


  public void setWaitIndex(Integer waitIndex) {
    this.waitIndex = waitIndex;
  }


  public FuzzySearchRequest waitTime(Long waitTime) {
    
    this.waitTime = waitTime;
    return this;
  }

   /**
   * Get waitTime
   * @return waitTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getWaitTime() {
    return waitTime;
  }


  public void setWaitTime(Long waitTime) {
    this.waitTime = waitTime;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FuzzySearchRequest fuzzySearchRequest = (FuzzySearchRequest) o;
    return Objects.equals(this.allowStale, fuzzySearchRequest.allowStale) &&
        Objects.equals(this.authToken, fuzzySearchRequest.authToken) &&
        Objects.equals(this.context, fuzzySearchRequest.context) &&
        Objects.equals(this.filter, fuzzySearchRequest.filter) &&
        Objects.equals(this.headers, fuzzySearchRequest.headers) &&
        Objects.equals(this.namespace, fuzzySearchRequest.namespace) &&
        Objects.equals(this.nextToken, fuzzySearchRequest.nextToken) &&
        Objects.equals(this.params, fuzzySearchRequest.params) &&
        Objects.equals(this.perPage, fuzzySearchRequest.perPage) &&
        Objects.equals(this.prefix, fuzzySearchRequest.prefix) &&
        Objects.equals(this.region, fuzzySearchRequest.region) &&
        Objects.equals(this.reverse, fuzzySearchRequest.reverse) &&
        Objects.equals(this.text, fuzzySearchRequest.text) &&
        Objects.equals(this.waitIndex, fuzzySearchRequest.waitIndex) &&
        Objects.equals(this.waitTime, fuzzySearchRequest.waitTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allowStale, authToken, context, filter, headers, namespace, nextToken, params, perPage, prefix, region, reverse, text, waitIndex, waitTime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FuzzySearchRequest {\n");
    sb.append("    allowStale: ").append(toIndentedString(allowStale)).append("\n");
    sb.append("    authToken: ").append(toIndentedString(authToken)).append("\n");
    sb.append("    context: ").append(toIndentedString(context)).append("\n");
    sb.append("    filter: ").append(toIndentedString(filter)).append("\n");
    sb.append("    headers: ").append(toIndentedString(headers)).append("\n");
    sb.append("    namespace: ").append(toIndentedString(namespace)).append("\n");
    sb.append("    nextToken: ").append(toIndentedString(nextToken)).append("\n");
    sb.append("    params: ").append(toIndentedString(params)).append("\n");
    sb.append("    perPage: ").append(toIndentedString(perPage)).append("\n");
    sb.append("    prefix: ").append(toIndentedString(prefix)).append("\n");
    sb.append("    region: ").append(toIndentedString(region)).append("\n");
    sb.append("    reverse: ").append(toIndentedString(reverse)).append("\n");
    sb.append("    text: ").append(toIndentedString(text)).append("\n");
    sb.append("    waitIndex: ").append(toIndentedString(waitIndex)).append("\n");
    sb.append("    waitTime: ").append(toIndentedString(waitTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("AllowStale");
    openapiFields.add("AuthToken");
    openapiFields.add("Context");
    openapiFields.add("Filter");
    openapiFields.add("Headers");
    openapiFields.add("Namespace");
    openapiFields.add("NextToken");
    openapiFields.add("Params");
    openapiFields.add("PerPage");
    openapiFields.add("Prefix");
    openapiFields.add("Region");
    openapiFields.add("Reverse");
    openapiFields.add("Text");
    openapiFields.add("WaitIndex");
    openapiFields.add("WaitTime");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to FuzzySearchRequest
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (FuzzySearchRequest.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in FuzzySearchRequest is not found in the empty JSON string", FuzzySearchRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!FuzzySearchRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `FuzzySearchRequest` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if (jsonObj.get("AuthToken") != null && !jsonObj.get("AuthToken").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `AuthToken` to be a primitive type in the JSON string but got `%s`", jsonObj.get("AuthToken").toString()));
      }
      if (jsonObj.get("Context") != null && !jsonObj.get("Context").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Context` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Context").toString()));
      }
      if (jsonObj.get("Filter") != null && !jsonObj.get("Filter").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Filter` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Filter").toString()));
      }
      if (jsonObj.get("Namespace") != null && !jsonObj.get("Namespace").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Namespace` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Namespace").toString()));
      }
      if (jsonObj.get("NextToken") != null && !jsonObj.get("NextToken").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `NextToken` to be a primitive type in the JSON string but got `%s`", jsonObj.get("NextToken").toString()));
      }
      if (jsonObj.get("Prefix") != null && !jsonObj.get("Prefix").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Prefix` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Prefix").toString()));
      }
      if (jsonObj.get("Region") != null && !jsonObj.get("Region").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Region` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Region").toString()));
      }
      if (jsonObj.get("Text") != null && !jsonObj.get("Text").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Text` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Text").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!FuzzySearchRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'FuzzySearchRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<FuzzySearchRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(FuzzySearchRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<FuzzySearchRequest>() {
           @Override
           public void write(JsonWriter out, FuzzySearchRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public FuzzySearchRequest read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of FuzzySearchRequest given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of FuzzySearchRequest
  * @throws IOException if the JSON string is invalid with respect to FuzzySearchRequest
  */
  public static FuzzySearchRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, FuzzySearchRequest.class);
  }

 /**
  * Convert an instance of FuzzySearchRequest to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

