/*
 * Nomad
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.1.4
 * Contact: support@hashicorp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.nomadproject.client;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapter;
import com.google.gson.internal.bind.util.ISO8601Utils;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.google.gson.JsonElement;
import io.gsonfire.GsonFireBuilder;
import io.gsonfire.TypeSelector;

import okio.ByteString;

import java.io.IOException;
import java.io.StringReader;
import java.lang.reflect.Type;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.ParsePosition;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import java.util.Locale;
import java.util.Map;
import java.util.HashMap;

/*
 * A JSON utility class
 *
 * NOTE: in the future, this class may be converted to static, which may break
 *       backward-compatibility
 */
public class JSON {
    private static Gson gson;
    private static boolean isLenientOnJson = false;
    private static DateTypeAdapter dateTypeAdapter = new DateTypeAdapter();
    private static SqlDateTypeAdapter sqlDateTypeAdapter = new SqlDateTypeAdapter();
    private static OffsetDateTimeTypeAdapter offsetDateTimeTypeAdapter = new OffsetDateTimeTypeAdapter();
    private static LocalDateTypeAdapter localDateTypeAdapter = new LocalDateTypeAdapter();
    private static ByteArrayAdapter byteArrayAdapter = new ByteArrayAdapter();

    @SuppressWarnings("unchecked")
    public static GsonBuilder createGson() {
        GsonFireBuilder fireBuilder = new GsonFireBuilder()
        ;
        GsonBuilder builder = fireBuilder.createGsonBuilder();
        return builder;
    }

    private static String getDiscriminatorValue(JsonElement readElement, String discriminatorField) {
        JsonElement element = readElement.getAsJsonObject().get(discriminatorField);
        if (null == element) {
            throw new IllegalArgumentException("missing discriminator field: <" + discriminatorField + ">");
        }
        return element.getAsString();
    }

    /**
     * Returns the Java class that implements the OpenAPI schema for the specified discriminator value.
     *
     * @param classByDiscriminatorValue The map of discriminator values to Java classes.
     * @param discriminatorValue The value of the OpenAPI discriminator in the input data.
     * @return The Java class that implements the OpenAPI schema
     */
    private static Class getClassByDiscriminator(Map classByDiscriminatorValue, String discriminatorValue) {
        Class clazz = (Class) classByDiscriminatorValue.get(discriminatorValue);
        if (null == clazz) {
            throw new IllegalArgumentException("cannot determine model class of name: <" + discriminatorValue + ">");
        }
        return clazz;
    }

    {
        gson = createGson()
            .registerTypeAdapter(Date.class, dateTypeAdapter)
            .registerTypeAdapter(java.sql.Date.class, sqlDateTypeAdapter)
            .registerTypeAdapter(OffsetDateTime.class, offsetDateTimeTypeAdapter)
            .registerTypeAdapter(LocalDate.class, localDateTypeAdapter)
            .registerTypeAdapter(byte[].class, byteArrayAdapter)
            .registerTypeAdapterFactory(new io.nomadproject.client.models.ACLPolicy.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.ACLPolicyListStub.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.ACLToken.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.ACLTokenListStub.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.Affinity.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.AllocDeploymentStatus.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.AllocStopResponse.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.AllocatedCpuResources.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.AllocatedDeviceResource.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.AllocatedMemoryResources.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.AllocatedResources.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.AllocatedSharedResources.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.AllocatedTaskResources.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.Allocation.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.AllocationListStub.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.AllocationMetric.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.Attribute.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.AutopilotConfiguration.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.CSIControllerInfo.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.CSIInfo.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.CSIMountOptions.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.CSINodeInfo.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.CSIPlugin.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.CSIPluginListStub.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.CSISnapshot.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.CSISnapshotCreateRequest.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.CSISnapshotCreateResponse.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.CSISnapshotListResponse.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.CSITopology.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.CSITopologyRequest.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.CSIVolume.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.CSIVolumeCapability.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.CSIVolumeCreateRequest.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.CSIVolumeExternalStub.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.CSIVolumeListExternalResponse.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.CSIVolumeListStub.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.CSIVolumeRegisterRequest.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.CheckRestart.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.Constraint.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.Consul.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.ConsulConnect.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.ConsulExposeConfig.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.ConsulExposePath.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.ConsulGateway.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.ConsulGatewayBindAddress.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.ConsulGatewayProxy.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.ConsulGatewayTLSConfig.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.ConsulIngressConfigEntry.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.ConsulIngressListener.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.ConsulIngressService.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.ConsulLinkedService.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.ConsulMeshGateway.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.ConsulProxy.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.ConsulSidecarService.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.ConsulTerminatingConfigEntry.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.ConsulUpstream.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.DNSConfig.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.Deployment.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.DeploymentAllocHealthRequest.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.DeploymentPauseRequest.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.DeploymentPromoteRequest.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.DeploymentState.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.DeploymentUnblockRequest.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.DeploymentUpdateResponse.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.DesiredTransition.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.DesiredUpdates.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.DispatchPayloadConfig.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.DrainMetadata.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.DrainSpec.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.DrainStrategy.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.DriverInfo.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.EphemeralDisk.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.EvalOptions.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.Evaluation.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.EvaluationStub.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.FieldDiff.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.FuzzyMatch.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.FuzzySearchRequest.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.FuzzySearchResponse.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.GaugeValue.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.HostNetworkInfo.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.HostVolumeInfo.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.Job.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.JobChildrenSummary.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.JobDeregisterResponse.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.JobDiff.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.JobDispatchRequest.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.JobDispatchResponse.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.JobEvaluateRequest.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.JobListStub.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.JobPlanRequest.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.JobPlanResponse.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.JobRegisterRequest.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.JobRegisterResponse.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.JobRevertRequest.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.JobScaleStatusResponse.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.JobStabilityRequest.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.JobStabilityResponse.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.JobSummary.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.JobValidateRequest.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.JobValidateResponse.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.JobVersionsResponse.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.JobsParseRequest.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.LogConfig.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.MetricsSummary.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.MigrateStrategy.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.Multiregion.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.MultiregionRegion.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.MultiregionStrategy.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.Namespace.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.NamespaceCapabilities.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.NetworkResource.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.Node.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.NodeCpuResources.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.NodeDevice.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.NodeDeviceLocality.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.NodeDeviceResource.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.NodeDiskResources.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.NodeDrainUpdateResponse.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.NodeEligibilityUpdateResponse.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.NodeEvent.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.NodeListStub.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.NodeMemoryResources.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.NodePurgeResponse.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.NodeReservedCpuResources.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.NodeReservedDiskResources.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.NodeReservedMemoryResources.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.NodeReservedNetworkResources.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.NodeReservedResources.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.NodeResources.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.NodeScoreMeta.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.NodeUpdateDrainRequest.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.NodeUpdateEligibilityRequest.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.ObjectDiff.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.OneTimeToken.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.OneTimeTokenExchangeRequest.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.OperatorHealthReply.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.ParameterizedJobConfig.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.PeriodicConfig.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.PeriodicForceResponse.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.PlanAnnotations.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.PointValue.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.Port.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.PortMapping.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.PreemptionConfig.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.QuotaLimit.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.QuotaSpec.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.RaftConfiguration.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.RaftServer.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.RequestedDevice.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.RescheduleEvent.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.ReschedulePolicy.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.RescheduleTracker.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.Resources.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.RestartPolicy.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.SampledValue.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.ScalingEvent.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.ScalingPolicy.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.ScalingPolicyListStub.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.ScalingRequest.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.SchedulerConfiguration.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.SchedulerConfigurationResponse.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.SchedulerSetConfigurationResponse.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.SearchRequest.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.SearchResponse.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.ServerHealth.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.Service.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.ServiceCheck.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.ServiceRegistration.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.SidecarTask.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.Spread.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.SpreadTarget.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.Task.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.TaskArtifact.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.TaskCSIPluginConfig.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.TaskDiff.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.TaskEvent.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.TaskGroup.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.TaskGroupDiff.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.TaskGroupScaleStatus.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.TaskGroupSummary.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.TaskHandle.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.TaskLifecycle.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.TaskState.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.Template.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.UpdateStrategy.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.Vault.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.VolumeMount.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.VolumeRequest.CustomTypeAdapterFactory())
            .registerTypeAdapterFactory(new io.nomadproject.client.models.WaitConfig.CustomTypeAdapterFactory())
            .create();
    }

    /**
     * Get Gson.
     *
     * @return Gson
     */
    public static Gson getGson() {
        return gson;
    }

    /**
     * Set Gson.
     *
     * @param gson Gson
     */
    public static void setGson(Gson gson) {
        JSON.gson = gson;
    }

    public static void setLenientOnJson(boolean lenientOnJson) {
        isLenientOnJson = lenientOnJson;
    }

    /**
     * Serialize the given Java object into JSON string.
     *
     * @param obj Object
     * @return String representation of the JSON
     */
    public static String serialize(Object obj) {
        return gson.toJson(obj);
    }

    /**
     * Deserialize the given JSON string to Java object.
     *
     * @param <T>        Type
     * @param body       The JSON string
     * @param returnType The type to deserialize into
     * @return The deserialized Java object
     */
    @SuppressWarnings("unchecked")
    public static <T> T deserialize(String body, Type returnType) {
        try {
            if (isLenientOnJson) {
                JsonReader jsonReader = new JsonReader(new StringReader(body));
                // see https://google-gson.googlecode.com/svn/trunk/gson/docs/javadocs/com/google/gson/stream/JsonReader.html#setLenient(boolean)
                jsonReader.setLenient(true);
                return gson.fromJson(jsonReader, returnType);
            } else {
                return gson.fromJson(body, returnType);
            }
        } catch (JsonParseException e) {
            // Fallback processing when failed to parse JSON form response body:
            // return the response body string directly for the String return type;
            if (returnType.equals(String.class)) {
                return (T) body;
            } else {
                throw (e);
            }
        }
    }

    /**
     * Gson TypeAdapter for Byte Array type
     */
    public static class ByteArrayAdapter extends TypeAdapter<byte[]> {

        @Override
        public void write(JsonWriter out, byte[] value) throws IOException {
            if (value == null) {
                out.nullValue();
            } else {
                out.value(ByteString.of(value).base64());
            }
        }

        @Override
        public byte[] read(JsonReader in) throws IOException {
            switch (in.peek()) {
                case NULL:
                    in.nextNull();
                    return null;
                default:
                    String bytesAsBase64 = in.nextString();
                    ByteString byteString = ByteString.decodeBase64(bytesAsBase64);
                    return byteString.toByteArray();
            }
        }
    }

    /**
     * Gson TypeAdapter for JSR310 OffsetDateTime type
     */
    public static class OffsetDateTimeTypeAdapter extends TypeAdapter<OffsetDateTime> {

        private DateTimeFormatter formatter;

        public OffsetDateTimeTypeAdapter() {
            this(DateTimeFormatter.ISO_OFFSET_DATE_TIME);
        }

        public OffsetDateTimeTypeAdapter(DateTimeFormatter formatter) {
            this.formatter = formatter;
        }

        public void setFormat(DateTimeFormatter dateFormat) {
            this.formatter = dateFormat;
        }

        @Override
        public void write(JsonWriter out, OffsetDateTime date) throws IOException {
            if (date == null) {
                out.nullValue();
            } else {
                out.value(formatter.format(date));
            }
        }

        @Override
        public OffsetDateTime read(JsonReader in) throws IOException {
            switch (in.peek()) {
                case NULL:
                    in.nextNull();
                    return null;
                default:
                    String date = in.nextString();
                    if (date.endsWith("+0000")) {
                        date = date.substring(0, date.length()-5) + "Z";
                    }
                    return OffsetDateTime.parse(date, formatter);
            }
        }
    }

    /**
     * Gson TypeAdapter for JSR310 LocalDate type
     */
    public static class LocalDateTypeAdapter extends TypeAdapter<LocalDate> {

        private DateTimeFormatter formatter;

        public LocalDateTypeAdapter() {
            this(DateTimeFormatter.ISO_LOCAL_DATE);
        }

        public LocalDateTypeAdapter(DateTimeFormatter formatter) {
            this.formatter = formatter;
        }

        public void setFormat(DateTimeFormatter dateFormat) {
            this.formatter = dateFormat;
        }

        @Override
        public void write(JsonWriter out, LocalDate date) throws IOException {
            if (date == null) {
                out.nullValue();
            } else {
                out.value(formatter.format(date));
            }
        }

        @Override
        public LocalDate read(JsonReader in) throws IOException {
            switch (in.peek()) {
                case NULL:
                    in.nextNull();
                    return null;
                default:
                    String date = in.nextString();
                    return LocalDate.parse(date, formatter);
            }
        }
    }

    public static void setOffsetDateTimeFormat(DateTimeFormatter dateFormat) {
        offsetDateTimeTypeAdapter.setFormat(dateFormat);
    }

    public static void setLocalDateFormat(DateTimeFormatter dateFormat) {
        localDateTypeAdapter.setFormat(dateFormat);
    }

    /**
     * Gson TypeAdapter for java.sql.Date type
     * If the dateFormat is null, a simple "yyyy-MM-dd" format will be used
     * (more efficient than SimpleDateFormat).
     */
    public static class SqlDateTypeAdapter extends TypeAdapter<java.sql.Date> {

        private DateFormat dateFormat;

        public SqlDateTypeAdapter() {}

        public SqlDateTypeAdapter(DateFormat dateFormat) {
            this.dateFormat = dateFormat;
        }

        public void setFormat(DateFormat dateFormat) {
            this.dateFormat = dateFormat;
        }

        @Override
        public void write(JsonWriter out, java.sql.Date date) throws IOException {
            if (date == null) {
                out.nullValue();
            } else {
                String value;
                if (dateFormat != null) {
                    value = dateFormat.format(date);
                } else {
                    value = date.toString();
                }
                out.value(value);
            }
        }

        @Override
        public java.sql.Date read(JsonReader in) throws IOException {
            switch (in.peek()) {
                case NULL:
                    in.nextNull();
                    return null;
                default:
                    String date = in.nextString();
                    try {
                        if (dateFormat != null) {
                            return new java.sql.Date(dateFormat.parse(date).getTime());
                        }
                        return new java.sql.Date(ISO8601Utils.parse(date, new ParsePosition(0)).getTime());
                    } catch (ParseException e) {
                        throw new JsonParseException(e);
                    }
            }
        }
    }

    /**
     * Gson TypeAdapter for java.util.Date type
     * If the dateFormat is null, ISO8601Utils will be used.
     */
    public static class DateTypeAdapter extends TypeAdapter<Date> {

        private DateFormat dateFormat;

        public DateTypeAdapter() {}

        public DateTypeAdapter(DateFormat dateFormat) {
            this.dateFormat = dateFormat;
        }

        public void setFormat(DateFormat dateFormat) {
            this.dateFormat = dateFormat;
        }

        @Override
        public void write(JsonWriter out, Date date) throws IOException {
            if (date == null) {
                out.nullValue();
            } else {
                String value;
                if (dateFormat != null) {
                    value = dateFormat.format(date);
                } else {
                    value = ISO8601Utils.format(date, true);
                }
                out.value(value);
            }
        }

        @Override
        public Date read(JsonReader in) throws IOException {
            try {
                switch (in.peek()) {
                    case NULL:
                        in.nextNull();
                        return null;
                    default:
                        String date = in.nextString();
                        try {
                            if (dateFormat != null) {
                                return dateFormat.parse(date);
                            }
                            return ISO8601Utils.parse(date, new ParsePosition(0));
                        } catch (ParseException e) {
                            throw new JsonParseException(e);
                        }
                }
            } catch (IllegalArgumentException e) {
                throw new JsonParseException(e);
            }
        }
    }

    public static void setDateFormat(DateFormat dateFormat) {
        dateTypeAdapter.setFormat(dateFormat);
    }

    public static void setSqlDateFormat(DateFormat dateFormat) {
        sqlDateTypeAdapter.setFormat(dateFormat);
    }
}
