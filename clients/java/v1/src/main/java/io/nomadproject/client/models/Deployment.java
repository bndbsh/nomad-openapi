/*
 * Nomad
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.1.4
 * Contact: support@hashicorp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.nomadproject.client.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.nomadproject.client.models.DeploymentState;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import io.nomadproject.client.JSON;

/**
 * Deployment
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class Deployment {
  public static final String SERIALIZED_NAME_CREATE_INDEX = "CreateIndex";
  @SerializedName(SERIALIZED_NAME_CREATE_INDEX)
  private Integer createIndex;

  public static final String SERIALIZED_NAME_I_D = "ID";
  @SerializedName(SERIALIZED_NAME_I_D)
  private String ID;

  public static final String SERIALIZED_NAME_IS_MULTIREGION = "IsMultiregion";
  @SerializedName(SERIALIZED_NAME_IS_MULTIREGION)
  private Boolean isMultiregion;

  public static final String SERIALIZED_NAME_JOB_CREATE_INDEX = "JobCreateIndex";
  @SerializedName(SERIALIZED_NAME_JOB_CREATE_INDEX)
  private Integer jobCreateIndex;

  public static final String SERIALIZED_NAME_JOB_I_D = "JobID";
  @SerializedName(SERIALIZED_NAME_JOB_I_D)
  private String jobID;

  public static final String SERIALIZED_NAME_JOB_MODIFY_INDEX = "JobModifyIndex";
  @SerializedName(SERIALIZED_NAME_JOB_MODIFY_INDEX)
  private Integer jobModifyIndex;

  public static final String SERIALIZED_NAME_JOB_SPEC_MODIFY_INDEX = "JobSpecModifyIndex";
  @SerializedName(SERIALIZED_NAME_JOB_SPEC_MODIFY_INDEX)
  private Integer jobSpecModifyIndex;

  public static final String SERIALIZED_NAME_JOB_VERSION = "JobVersion";
  @SerializedName(SERIALIZED_NAME_JOB_VERSION)
  private Integer jobVersion;

  public static final String SERIALIZED_NAME_MODIFY_INDEX = "ModifyIndex";
  @SerializedName(SERIALIZED_NAME_MODIFY_INDEX)
  private Integer modifyIndex;

  public static final String SERIALIZED_NAME_NAMESPACE = "Namespace";
  @SerializedName(SERIALIZED_NAME_NAMESPACE)
  private String namespace;

  public static final String SERIALIZED_NAME_STATUS = "Status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_STATUS_DESCRIPTION = "StatusDescription";
  @SerializedName(SERIALIZED_NAME_STATUS_DESCRIPTION)
  private String statusDescription;

  public static final String SERIALIZED_NAME_TASK_GROUPS = "TaskGroups";
  @SerializedName(SERIALIZED_NAME_TASK_GROUPS)
  private Map<String, DeploymentState> taskGroups = null;

  public Deployment() { 
  }

  public Deployment createIndex(Integer createIndex) {
    
    this.createIndex = createIndex;
    return this;
  }

   /**
   * Get createIndex
   * minimum: 0
   * maximum: 384
   * @return createIndex
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getCreateIndex() {
    return createIndex;
  }


  public void setCreateIndex(Integer createIndex) {
    this.createIndex = createIndex;
  }


  public Deployment ID(String ID) {
    
    this.ID = ID;
    return this;
  }

   /**
   * Get ID
   * @return ID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getID() {
    return ID;
  }


  public void setID(String ID) {
    this.ID = ID;
  }


  public Deployment isMultiregion(Boolean isMultiregion) {
    
    this.isMultiregion = isMultiregion;
    return this;
  }

   /**
   * Get isMultiregion
   * @return isMultiregion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsMultiregion() {
    return isMultiregion;
  }


  public void setIsMultiregion(Boolean isMultiregion) {
    this.isMultiregion = isMultiregion;
  }


  public Deployment jobCreateIndex(Integer jobCreateIndex) {
    
    this.jobCreateIndex = jobCreateIndex;
    return this;
  }

   /**
   * Get jobCreateIndex
   * minimum: 0
   * maximum: 384
   * @return jobCreateIndex
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getJobCreateIndex() {
    return jobCreateIndex;
  }


  public void setJobCreateIndex(Integer jobCreateIndex) {
    this.jobCreateIndex = jobCreateIndex;
  }


  public Deployment jobID(String jobID) {
    
    this.jobID = jobID;
    return this;
  }

   /**
   * Get jobID
   * @return jobID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getJobID() {
    return jobID;
  }


  public void setJobID(String jobID) {
    this.jobID = jobID;
  }


  public Deployment jobModifyIndex(Integer jobModifyIndex) {
    
    this.jobModifyIndex = jobModifyIndex;
    return this;
  }

   /**
   * Get jobModifyIndex
   * minimum: 0
   * maximum: 384
   * @return jobModifyIndex
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getJobModifyIndex() {
    return jobModifyIndex;
  }


  public void setJobModifyIndex(Integer jobModifyIndex) {
    this.jobModifyIndex = jobModifyIndex;
  }


  public Deployment jobSpecModifyIndex(Integer jobSpecModifyIndex) {
    
    this.jobSpecModifyIndex = jobSpecModifyIndex;
    return this;
  }

   /**
   * Get jobSpecModifyIndex
   * minimum: 0
   * maximum: 384
   * @return jobSpecModifyIndex
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getJobSpecModifyIndex() {
    return jobSpecModifyIndex;
  }


  public void setJobSpecModifyIndex(Integer jobSpecModifyIndex) {
    this.jobSpecModifyIndex = jobSpecModifyIndex;
  }


  public Deployment jobVersion(Integer jobVersion) {
    
    this.jobVersion = jobVersion;
    return this;
  }

   /**
   * Get jobVersion
   * minimum: 0
   * maximum: 384
   * @return jobVersion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getJobVersion() {
    return jobVersion;
  }


  public void setJobVersion(Integer jobVersion) {
    this.jobVersion = jobVersion;
  }


  public Deployment modifyIndex(Integer modifyIndex) {
    
    this.modifyIndex = modifyIndex;
    return this;
  }

   /**
   * Get modifyIndex
   * minimum: 0
   * maximum: 384
   * @return modifyIndex
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getModifyIndex() {
    return modifyIndex;
  }


  public void setModifyIndex(Integer modifyIndex) {
    this.modifyIndex = modifyIndex;
  }


  public Deployment namespace(String namespace) {
    
    this.namespace = namespace;
    return this;
  }

   /**
   * Get namespace
   * @return namespace
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNamespace() {
    return namespace;
  }


  public void setNamespace(String namespace) {
    this.namespace = namespace;
  }


  public Deployment status(String status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getStatus() {
    return status;
  }


  public void setStatus(String status) {
    this.status = status;
  }


  public Deployment statusDescription(String statusDescription) {
    
    this.statusDescription = statusDescription;
    return this;
  }

   /**
   * Get statusDescription
   * @return statusDescription
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getStatusDescription() {
    return statusDescription;
  }


  public void setStatusDescription(String statusDescription) {
    this.statusDescription = statusDescription;
  }


  public Deployment taskGroups(Map<String, DeploymentState> taskGroups) {
    
    this.taskGroups = taskGroups;
    return this;
  }

  public Deployment putTaskGroupsItem(String key, DeploymentState taskGroupsItem) {
    if (this.taskGroups == null) {
      this.taskGroups = new HashMap<>();
    }
    this.taskGroups.put(key, taskGroupsItem);
    return this;
  }

   /**
   * Get taskGroups
   * @return taskGroups
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, DeploymentState> getTaskGroups() {
    return taskGroups;
  }


  public void setTaskGroups(Map<String, DeploymentState> taskGroups) {
    this.taskGroups = taskGroups;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Deployment deployment = (Deployment) o;
    return Objects.equals(this.createIndex, deployment.createIndex) &&
        Objects.equals(this.ID, deployment.ID) &&
        Objects.equals(this.isMultiregion, deployment.isMultiregion) &&
        Objects.equals(this.jobCreateIndex, deployment.jobCreateIndex) &&
        Objects.equals(this.jobID, deployment.jobID) &&
        Objects.equals(this.jobModifyIndex, deployment.jobModifyIndex) &&
        Objects.equals(this.jobSpecModifyIndex, deployment.jobSpecModifyIndex) &&
        Objects.equals(this.jobVersion, deployment.jobVersion) &&
        Objects.equals(this.modifyIndex, deployment.modifyIndex) &&
        Objects.equals(this.namespace, deployment.namespace) &&
        Objects.equals(this.status, deployment.status) &&
        Objects.equals(this.statusDescription, deployment.statusDescription) &&
        Objects.equals(this.taskGroups, deployment.taskGroups);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createIndex, ID, isMultiregion, jobCreateIndex, jobID, jobModifyIndex, jobSpecModifyIndex, jobVersion, modifyIndex, namespace, status, statusDescription, taskGroups);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Deployment {\n");
    sb.append("    createIndex: ").append(toIndentedString(createIndex)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    isMultiregion: ").append(toIndentedString(isMultiregion)).append("\n");
    sb.append("    jobCreateIndex: ").append(toIndentedString(jobCreateIndex)).append("\n");
    sb.append("    jobID: ").append(toIndentedString(jobID)).append("\n");
    sb.append("    jobModifyIndex: ").append(toIndentedString(jobModifyIndex)).append("\n");
    sb.append("    jobSpecModifyIndex: ").append(toIndentedString(jobSpecModifyIndex)).append("\n");
    sb.append("    jobVersion: ").append(toIndentedString(jobVersion)).append("\n");
    sb.append("    modifyIndex: ").append(toIndentedString(modifyIndex)).append("\n");
    sb.append("    namespace: ").append(toIndentedString(namespace)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    statusDescription: ").append(toIndentedString(statusDescription)).append("\n");
    sb.append("    taskGroups: ").append(toIndentedString(taskGroups)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("CreateIndex");
    openapiFields.add("ID");
    openapiFields.add("IsMultiregion");
    openapiFields.add("JobCreateIndex");
    openapiFields.add("JobID");
    openapiFields.add("JobModifyIndex");
    openapiFields.add("JobSpecModifyIndex");
    openapiFields.add("JobVersion");
    openapiFields.add("ModifyIndex");
    openapiFields.add("Namespace");
    openapiFields.add("Status");
    openapiFields.add("StatusDescription");
    openapiFields.add("TaskGroups");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to Deployment
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (Deployment.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in Deployment is not found in the empty JSON string", Deployment.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!Deployment.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Deployment` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if (jsonObj.get("ID") != null && !jsonObj.get("ID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ID").toString()));
      }
      if (jsonObj.get("JobID") != null && !jsonObj.get("JobID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `JobID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("JobID").toString()));
      }
      if (jsonObj.get("Namespace") != null && !jsonObj.get("Namespace").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Namespace` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Namespace").toString()));
      }
      if (jsonObj.get("Status") != null && !jsonObj.get("Status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Status").toString()));
      }
      if (jsonObj.get("StatusDescription") != null && !jsonObj.get("StatusDescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `StatusDescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("StatusDescription").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Deployment.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Deployment' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Deployment> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Deployment.class));

       return (TypeAdapter<T>) new TypeAdapter<Deployment>() {
           @Override
           public void write(JsonWriter out, Deployment value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Deployment read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of Deployment given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of Deployment
  * @throws IOException if the JSON string is invalid with respect to Deployment
  */
  public static Deployment fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Deployment.class);
  }

 /**
  * Convert an instance of Deployment to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

