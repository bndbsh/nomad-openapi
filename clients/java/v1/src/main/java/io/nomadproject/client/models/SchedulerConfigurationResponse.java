/*
 * Nomad
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.1.4
 * Contact: support@hashicorp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.nomadproject.client.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.nomadproject.client.models.SchedulerConfiguration;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import io.nomadproject.client.JSON;

/**
 * SchedulerConfigurationResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class SchedulerConfigurationResponse {
  public static final String SERIALIZED_NAME_KNOWN_LEADER = "KnownLeader";
  @SerializedName(SERIALIZED_NAME_KNOWN_LEADER)
  private Boolean knownLeader;

  public static final String SERIALIZED_NAME_LAST_CONTACT = "LastContact";
  @SerializedName(SERIALIZED_NAME_LAST_CONTACT)
  private Long lastContact;

  public static final String SERIALIZED_NAME_LAST_INDEX = "LastIndex";
  @SerializedName(SERIALIZED_NAME_LAST_INDEX)
  private Integer lastIndex;

  public static final String SERIALIZED_NAME_NEXT_TOKEN = "NextToken";
  @SerializedName(SERIALIZED_NAME_NEXT_TOKEN)
  private String nextToken;

  public static final String SERIALIZED_NAME_REQUEST_TIME = "RequestTime";
  @SerializedName(SERIALIZED_NAME_REQUEST_TIME)
  private Long requestTime;

  public static final String SERIALIZED_NAME_SCHEDULER_CONFIG = "SchedulerConfig";
  @SerializedName(SERIALIZED_NAME_SCHEDULER_CONFIG)
  private SchedulerConfiguration schedulerConfig;

  public SchedulerConfigurationResponse() { 
  }

  public SchedulerConfigurationResponse knownLeader(Boolean knownLeader) {
    
    this.knownLeader = knownLeader;
    return this;
  }

   /**
   * Get knownLeader
   * @return knownLeader
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getKnownLeader() {
    return knownLeader;
  }


  public void setKnownLeader(Boolean knownLeader) {
    this.knownLeader = knownLeader;
  }


  public SchedulerConfigurationResponse lastContact(Long lastContact) {
    
    this.lastContact = lastContact;
    return this;
  }

   /**
   * Get lastContact
   * @return lastContact
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getLastContact() {
    return lastContact;
  }


  public void setLastContact(Long lastContact) {
    this.lastContact = lastContact;
  }


  public SchedulerConfigurationResponse lastIndex(Integer lastIndex) {
    
    this.lastIndex = lastIndex;
    return this;
  }

   /**
   * Get lastIndex
   * minimum: 0
   * maximum: 384
   * @return lastIndex
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getLastIndex() {
    return lastIndex;
  }


  public void setLastIndex(Integer lastIndex) {
    this.lastIndex = lastIndex;
  }


  public SchedulerConfigurationResponse nextToken(String nextToken) {
    
    this.nextToken = nextToken;
    return this;
  }

   /**
   * Get nextToken
   * @return nextToken
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNextToken() {
    return nextToken;
  }


  public void setNextToken(String nextToken) {
    this.nextToken = nextToken;
  }


  public SchedulerConfigurationResponse requestTime(Long requestTime) {
    
    this.requestTime = requestTime;
    return this;
  }

   /**
   * Get requestTime
   * @return requestTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getRequestTime() {
    return requestTime;
  }


  public void setRequestTime(Long requestTime) {
    this.requestTime = requestTime;
  }


  public SchedulerConfigurationResponse schedulerConfig(SchedulerConfiguration schedulerConfig) {
    
    this.schedulerConfig = schedulerConfig;
    return this;
  }

   /**
   * Get schedulerConfig
   * @return schedulerConfig
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public SchedulerConfiguration getSchedulerConfig() {
    return schedulerConfig;
  }


  public void setSchedulerConfig(SchedulerConfiguration schedulerConfig) {
    this.schedulerConfig = schedulerConfig;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SchedulerConfigurationResponse schedulerConfigurationResponse = (SchedulerConfigurationResponse) o;
    return Objects.equals(this.knownLeader, schedulerConfigurationResponse.knownLeader) &&
        Objects.equals(this.lastContact, schedulerConfigurationResponse.lastContact) &&
        Objects.equals(this.lastIndex, schedulerConfigurationResponse.lastIndex) &&
        Objects.equals(this.nextToken, schedulerConfigurationResponse.nextToken) &&
        Objects.equals(this.requestTime, schedulerConfigurationResponse.requestTime) &&
        Objects.equals(this.schedulerConfig, schedulerConfigurationResponse.schedulerConfig);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(knownLeader, lastContact, lastIndex, nextToken, requestTime, schedulerConfig);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SchedulerConfigurationResponse {\n");
    sb.append("    knownLeader: ").append(toIndentedString(knownLeader)).append("\n");
    sb.append("    lastContact: ").append(toIndentedString(lastContact)).append("\n");
    sb.append("    lastIndex: ").append(toIndentedString(lastIndex)).append("\n");
    sb.append("    nextToken: ").append(toIndentedString(nextToken)).append("\n");
    sb.append("    requestTime: ").append(toIndentedString(requestTime)).append("\n");
    sb.append("    schedulerConfig: ").append(toIndentedString(schedulerConfig)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("KnownLeader");
    openapiFields.add("LastContact");
    openapiFields.add("LastIndex");
    openapiFields.add("NextToken");
    openapiFields.add("RequestTime");
    openapiFields.add("SchedulerConfig");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to SchedulerConfigurationResponse
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (SchedulerConfigurationResponse.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in SchedulerConfigurationResponse is not found in the empty JSON string", SchedulerConfigurationResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!SchedulerConfigurationResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SchedulerConfigurationResponse` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if (jsonObj.get("NextToken") != null && !jsonObj.get("NextToken").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `NextToken` to be a primitive type in the JSON string but got `%s`", jsonObj.get("NextToken").toString()));
      }
      // validate the optional field `SchedulerConfig`
      if (jsonObj.getAsJsonObject("SchedulerConfig") != null) {
        SchedulerConfiguration.validateJsonObject(jsonObj.getAsJsonObject("SchedulerConfig"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SchedulerConfigurationResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SchedulerConfigurationResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SchedulerConfigurationResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SchedulerConfigurationResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<SchedulerConfigurationResponse>() {
           @Override
           public void write(JsonWriter out, SchedulerConfigurationResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SchedulerConfigurationResponse read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of SchedulerConfigurationResponse given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of SchedulerConfigurationResponse
  * @throws IOException if the JSON string is invalid with respect to SchedulerConfigurationResponse
  */
  public static SchedulerConfigurationResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SchedulerConfigurationResponse.class);
  }

 /**
  * Convert an instance of SchedulerConfigurationResponse to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

