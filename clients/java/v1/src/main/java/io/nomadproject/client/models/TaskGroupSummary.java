/*
 * Nomad
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.1.4
 * Contact: support@hashicorp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.nomadproject.client.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import io.nomadproject.client.JSON;

/**
 * TaskGroupSummary
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class TaskGroupSummary {
  public static final String SERIALIZED_NAME_COMPLETE = "Complete";
  @SerializedName(SERIALIZED_NAME_COMPLETE)
  private Integer complete;

  public static final String SERIALIZED_NAME_FAILED = "Failed";
  @SerializedName(SERIALIZED_NAME_FAILED)
  private Integer failed;

  public static final String SERIALIZED_NAME_LOST = "Lost";
  @SerializedName(SERIALIZED_NAME_LOST)
  private Integer lost;

  public static final String SERIALIZED_NAME_QUEUED = "Queued";
  @SerializedName(SERIALIZED_NAME_QUEUED)
  private Integer queued;

  public static final String SERIALIZED_NAME_RUNNING = "Running";
  @SerializedName(SERIALIZED_NAME_RUNNING)
  private Integer running;

  public static final String SERIALIZED_NAME_STARTING = "Starting";
  @SerializedName(SERIALIZED_NAME_STARTING)
  private Integer starting;

  public static final String SERIALIZED_NAME_UNKNOWN = "Unknown";
  @SerializedName(SERIALIZED_NAME_UNKNOWN)
  private Integer unknown;

  public TaskGroupSummary() { 
  }

  public TaskGroupSummary complete(Integer complete) {
    
    this.complete = complete;
    return this;
  }

   /**
   * Get complete
   * @return complete
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getComplete() {
    return complete;
  }


  public void setComplete(Integer complete) {
    this.complete = complete;
  }


  public TaskGroupSummary failed(Integer failed) {
    
    this.failed = failed;
    return this;
  }

   /**
   * Get failed
   * @return failed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getFailed() {
    return failed;
  }


  public void setFailed(Integer failed) {
    this.failed = failed;
  }


  public TaskGroupSummary lost(Integer lost) {
    
    this.lost = lost;
    return this;
  }

   /**
   * Get lost
   * @return lost
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getLost() {
    return lost;
  }


  public void setLost(Integer lost) {
    this.lost = lost;
  }


  public TaskGroupSummary queued(Integer queued) {
    
    this.queued = queued;
    return this;
  }

   /**
   * Get queued
   * @return queued
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getQueued() {
    return queued;
  }


  public void setQueued(Integer queued) {
    this.queued = queued;
  }


  public TaskGroupSummary running(Integer running) {
    
    this.running = running;
    return this;
  }

   /**
   * Get running
   * @return running
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getRunning() {
    return running;
  }


  public void setRunning(Integer running) {
    this.running = running;
  }


  public TaskGroupSummary starting(Integer starting) {
    
    this.starting = starting;
    return this;
  }

   /**
   * Get starting
   * @return starting
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getStarting() {
    return starting;
  }


  public void setStarting(Integer starting) {
    this.starting = starting;
  }


  public TaskGroupSummary unknown(Integer unknown) {
    
    this.unknown = unknown;
    return this;
  }

   /**
   * Get unknown
   * @return unknown
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getUnknown() {
    return unknown;
  }


  public void setUnknown(Integer unknown) {
    this.unknown = unknown;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TaskGroupSummary taskGroupSummary = (TaskGroupSummary) o;
    return Objects.equals(this.complete, taskGroupSummary.complete) &&
        Objects.equals(this.failed, taskGroupSummary.failed) &&
        Objects.equals(this.lost, taskGroupSummary.lost) &&
        Objects.equals(this.queued, taskGroupSummary.queued) &&
        Objects.equals(this.running, taskGroupSummary.running) &&
        Objects.equals(this.starting, taskGroupSummary.starting) &&
        Objects.equals(this.unknown, taskGroupSummary.unknown);
  }

  @Override
  public int hashCode() {
    return Objects.hash(complete, failed, lost, queued, running, starting, unknown);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TaskGroupSummary {\n");
    sb.append("    complete: ").append(toIndentedString(complete)).append("\n");
    sb.append("    failed: ").append(toIndentedString(failed)).append("\n");
    sb.append("    lost: ").append(toIndentedString(lost)).append("\n");
    sb.append("    queued: ").append(toIndentedString(queued)).append("\n");
    sb.append("    running: ").append(toIndentedString(running)).append("\n");
    sb.append("    starting: ").append(toIndentedString(starting)).append("\n");
    sb.append("    unknown: ").append(toIndentedString(unknown)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Complete");
    openapiFields.add("Failed");
    openapiFields.add("Lost");
    openapiFields.add("Queued");
    openapiFields.add("Running");
    openapiFields.add("Starting");
    openapiFields.add("Unknown");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to TaskGroupSummary
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (TaskGroupSummary.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in TaskGroupSummary is not found in the empty JSON string", TaskGroupSummary.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!TaskGroupSummary.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TaskGroupSummary` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TaskGroupSummary.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TaskGroupSummary' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TaskGroupSummary> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TaskGroupSummary.class));

       return (TypeAdapter<T>) new TypeAdapter<TaskGroupSummary>() {
           @Override
           public void write(JsonWriter out, TaskGroupSummary value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TaskGroupSummary read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of TaskGroupSummary given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of TaskGroupSummary
  * @throws IOException if the JSON string is invalid with respect to TaskGroupSummary
  */
  public static TaskGroupSummary fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TaskGroupSummary.class);
  }

 /**
  * Convert an instance of TaskGroupSummary to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

